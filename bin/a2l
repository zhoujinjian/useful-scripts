#!/bin/bash
# @Function
# echo each arguments on one line colorfully.
#
# @Usage
#   $ ./a2l arg1 arg2
#   $ ./a2l *.txt
#
# @online-doc https://github.com/oldratlee/useful-scripts/blob/dev-2.x/docs/shell.md#-a2l
# @author Jerry Lee (oldratlee at gmail dot com)
set -eEuo pipefail

# NOTE: DO NOT declare var PROG as readonly, because its value is supplied by subshell.
PROG="$(basename "$0")"
readonly PROG_VERSION='2.4.0'

################################################################################
# util functions
################################################################################

# NOTE: $'foo' is the escape sequence syntax of bash
readonly ec=$'\033'      # escape char
readonly eend=$'\033[0m' # escape end
readonly nl=$'\n'        # new line

colorEcho() {
    local color="$1"
    shift
    # check isatty in bash https://stackoverflow.com/questions/10022323
    # if stdout is console, turn on color output.
    [ -t 1 ] && echo "${ec}[1;${color}m$*${eend}" || echo "$*"
}

redEcho() {
    colorEcho 31 "$@"
}

usage() {
    cat <<EOF
Usage: ${PROG} [OPTION]... ARG...
echo each arguments on one line colorfully.

Example:
  ${PROG} arg1 arg2
  ${PROG} */*.py

Options:
  -h, --help      display this help and exit
  -V, --version   display version information and exit
EOF

    exit
}

progVersion() {
    echo "$PROG $PROG_VERSION"
    exit
}

################################################################################
# parse options
################################################################################

declare -a args=()
while [ $# -gt 0 ]; do
    case "$1" in
    -h | --help)
        usage
        ;;
    -V | --version)
        progVersion
        ;;
    --)
        shift
        args=(${args[@]:+"${args[@]}"} "$@")
        break
        ;;
    -*)
        # if unrecognized option, treat it and all follow args as args
        args=(${args[@]:+"${args[@]}"} "$@")
        break
        ;;
    *)
        # if not option, treat all follow args as args
        args=(${args[@]:+"${args[@]}"} "$@")
        break
        ;;
    esac
done

################################################################################
# biz logic
################################################################################

readonly -a ECHO_COLORS=(33 35 36 31 32 37 34)
COUNT=0

for a in ${args[@]:+"${args[@]}"}; do
    colorEcho "${ECHO_COLORS[COUNT++ % ${#ECHO_COLORS[@]}]}" "$a"
done
